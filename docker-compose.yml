version: "3.3"
services:
  api:
    container_name: api
    restart: unless-stopped
    image: api
    command: python app/main.py
    build: .
    env_file:
      - .env
    depends_on:
      - db
  engine:
    container_name: engine
    restart: unless-stopped
    image: engine
    build: .
    command: python app/engine.py
    env_file:
      - .env
    depends_on:
      - db
  db:
    container_name: db
    restart: always
    image: postgres:13.3
    env_file:
      - .env
    volumes:
      - k-db:/var/lib/postgresql/data
  # rabbitmq:
  #   image: rabbitmq:3-management-alpine
  #   container_name: rabbitmq
  #   ports:
  #     - "127.0.0.1:5672:5672"
  #     - "127.0.0.1:15672:15672"
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq/
  #     - rabbitmq-log:/var/log/rabbitmq
  zoo1:
    image: confluentinc/cp-zookeeper:latest
    hostname: zoo1
    restart: always
    container_name: zoo1
    # ports:
    #   - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
  kafka1:
    image: confluentinc/cp-kafka:latest
    restart: always
    hostname: kafka1
    container_name: kafka1
    # ports:
    #   - "9092:9092"
    #   - "29092:29092"
    #   - "9999:9999"
    environment:
      # KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_API_VERSION_REQUEST: "false"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zoo1
volumes:
  rabbitmq-data:
  rabbitmq-log:
  k-db:
networks:
  default:
    external: true
    name: kavianex
